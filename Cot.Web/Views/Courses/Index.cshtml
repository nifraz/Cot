@model IPagedList<Course>

@{
    ViewData["Title"] = "Courses";
}

<h1>Courses List</h1>

<p>
    <a class="btn btn-outline-primary" asp-action="Create">Create New</a>
</p>

@Html.PagedListPager(Model,
    p => Url.Action("Index", new { PageNumber = p, PageSize = Model.PageSize }),
    new PagedListRenderOptions
    {
        ContainerDivClasses = new string[] { "align-middle" },
        LiElementClasses = new string[] { "page-item" },
        PageClasses = new string[] { "page-link" },
        DisplayLinkToFirstPage = PagedListDisplayMode.Always,
        DisplayLinkToLastPage = PagedListDisplayMode.Always,
        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
        DisplayLinkToNextPage = PagedListDisplayMode.Always,
        MaximumPageNumbersToDisplay = 9,
        DisplayEllipsesWhenNotShowingAllPageNumbers = true
    })

<table class="table table-sm table-hover align-middle">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.First().Code)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Title)
            </th>
            <th>

            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Code)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td class="">
                    <a class="btn btn-sm btn-info" asp-action="Details" asp-route-id="@item.Code">Details</a> |
                    <a class="btn btn-sm btn-secondary" asp-action="Edit" asp-route-id="@item.Code">Edit</a> |
                    <a class="btn btn-sm btn-danger" asp-action="Delete" asp-route-id="@item.Code">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
