@model ListViewModel<Course>

@{
    ViewData["Title"] = "Manage Courses";

    var newSortOrder = (Model.SortOrder == "Ascending") ? "Descending" : "Ascending";
    var sortIconClass = Model.SortOrder == "Descending" ? "bi-sort-down" : "bi-sort-up";
}

<!--Title-->
<div class="title text-white shadow-sm">
    <!--Row-->
    <div class="g-2 row">
        <!--Col-->
        <div class="gap-2 col-12 d-flex align-content-center">
            <!--Title-->
            <h4 class="m-0 ms-2 pt-1">Manage <strong>Courses</strong></h4>
            <!--Buttons-->
            <div class="ms-auto gap-2 d-flex">
                <!--Overview-->
                <a class="btn btn-outline-light" asp-action="Index"><i class="bi bi-book"></i></a>
                <!--Create-->
                <a class="btn btn-success" asp-action="Create"><i class="bi bi-plus-circle"></i>&nbsp;NEW</a>
            </div>
        </div>
    </div>
</div>

<!--Section-->
<div class="section my-sm-2 border rounded shadow">
    <!--Form-->
    <form method="get">
        <!--Section Header-->
        <div class="section-header">
            <!--Row-->
            <div class="g-2 row">
                <!--Col-->
                <div class="col-12 col-sm-4 col-md-3 col-lg-2 d-flex justify-content-start align-items-center">
                    <!--Page Number-->
                    <input type="hidden" asp-for="PageNumber" />
                    <!--Input Group-->
                    <div class="input-group w-100">
                        <!--PageSize-->
                        <label class="input-group-text" asp-for="PageSize">Items</label>
                        <input class="form-control" asp-for="PageSize" placeholder="@(Model.PageSize ?? 25)" min="1" max="100">
                        <!--Go Button-->
                        <button class="btn btn-primary" type="submit"><i class="bi bi-arrow-right-circle"></i></button>
                    </div>
                    <!--Sort Field-->
                    <input type="hidden" asp-for="SortField" />
                    <!--Sort Order-->
                    <input type="hidden" asp-for="SortOrder" />
                </div>

                <!--Col-->
                <div class="col-12 col-sm-8 col-md-5 col-lg-4 d-flex justify-content-center align-items-center">
                    <!--Input Group-->
                    <div class="input-group w-100">
                        <!--Search Field-->
                        <label class="input-group-text" asp-for="SearchText">Search</label>
                        <select class="form-select overflow-auto" asp-for="SearchField" asp-items="Model.SearchFields">
                            <option value="All">All</option>
                        </select>
                        <!--Search Text-->
                        <input class="form-control" type="search" asp-for="SearchText" placeholder="@(Model.SearchText ?? "Text")">
                        <!--Search Button-->
                        <button class="btn btn-primary" type="submit"><i class="bi bi-search"></i></button>
                    </div>
                </div>

                <!--Col-->
                <div class="ms-auto col-12 col-sm-12 col-md-4 col-lg-6 d-flex justify-content-end align-items-center">
                    <!--Pagination-->
                    @Html.PagedListPager(Model.Items,
               p => Url.Action("Index", new { PageNumber = p, Model.PageSize, Model.SortField, Model.SortOrder, Model.SearchField, Model.SearchText }),
               new PagedListRenderOptions
               {
                   ContainerDivClasses = new string[] { "overflow-auto" },
                   UlElementClasses = new string[] { "pagination m-0" },
                   LiElementClasses = new string[] { "page-item" },
                   PageClasses = new string[] { "page-link" },
                   DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                   DisplayLinkToLastPage = PagedListDisplayMode.Always,
                   MaximumPageNumbersToDisplay = 5,
               })
                </div>
            </div>
        </div>
    </form>

    <!--Row-->
    <div class="g-2 row table-responsive">
        <!--Table-->
        <table class="m-0 p-0 table table-sm table-hover">
            <thead>
                <tr class="align-middle">
                    <th>
                        <a asp-action="Index"
                           asp-route-PageNumber="@Model.PageNumber"
                           asp-route-PageSize="@Model.PageSize"
                           asp-route-SortField="Code"
                           asp-route-SortOrder="@(Model.SortField == "Code" ? newSortOrder : Model.SortOrder)"
                           asp-route-SearchField="@Model.SearchField"
                           asp-route-SearchText="@Model.SearchText">
                            @if (Model.SortField == "Code")
                            {
                                <i class="bi @sortIconClass"></i>
                            }
                            Code
                        </a>
                    </th>
                    <th>
                        <a asp-action="Index"
                           asp-route-PageNumber="@Model.PageNumber"
                           asp-route-PageSize="@Model.PageSize"
                           asp-route-SortField="Title"
                           asp-route-SortOrder="@(Model.SortField == "Title" ? newSortOrder : Model.SortOrder)"
                           asp-route-SearchField="@Model.SearchField"
                           asp-route-SearchText="@Model.SearchText">
                            @if (Model.SortField == "Title")
                            {
                                <i class="bi @sortIconClass"></i>
                            }
                            Title
                        </a>
                    </th>
                    <th>
                        <a asp-action="Index"
                           asp-route-PageNumber="@Model.PageNumber"
                           asp-route-PageSize="@Model.PageSize"
                           asp-route-SortField="Level"
                           asp-route-SortOrder="@(Model.SortField == "Level" ? newSortOrder : Model.SortOrder)"
                           asp-route-SearchField="@Model.SearchField"
                           asp-route-SearchText="@Model.SearchText">
                            @if (Model.SortField == "Level")
                            {
                                <i class="bi @sortIconClass"></i>
                            }
                            Level
                        </a>
                    </th>
                    <th>
                        <a asp-action="Index"
                           asp-route-PageNumber="@Model.PageNumber"
                           asp-route-PageSize="@Model.PageSize"
                           asp-route-SortField="Type"
                           asp-route-SortOrder="@(Model.SortField == "Type" ? newSortOrder : Model.SortOrder)"
                           asp-route-SearchField="@Model.SearchField"
                           asp-route-SearchText="@Model.SearchText">
                            @if (Model.SortField == "Type")
                            {
                                <i class="bi @sortIconClass"></i>
                            }
                            Type
                        </a>
                    </th>
                    <th>
                        <a asp-action="Index"
                           asp-route-PageNumber="@Model.PageNumber"
                           asp-route-PageSize="@Model.PageSize"
                           asp-route-SortField="AddedDateTime"
                           asp-route-SortOrder="@(Model.SortField == "AddedDateTime" ? newSortOrder : Model.SortOrder)"
                           asp-route-SearchField="@Model.SearchField"
                           asp-route-SearchText="@Model.SearchText">
                            @if (Model.SortField == "AddedDateTime")
                            {
                                <i class="bi @sortIconClass"></i>
                            }
                            Added Date | Time
                        </a>
                    </th>
                    <th>
                        <a asp-action="Index"
                           asp-route-PageNumber="@Model.PageNumber"
                           asp-route-PageSize="@Model.PageSize"
                           asp-route-SortField="ModifiedDateTime"
                           asp-route-SortOrder="@(Model.SortField == "ModifiedDateTime" ? newSortOrder : Model.SortOrder)"
                           asp-route-SearchField="@Model.SearchField"
                           asp-route-SearchText="@Model.SearchText">
                            @if (Model.SortField == "ModifiedDateTime")
                            {
                                <i class="bi @sortIconClass"></i>
                            }
                            Modified Date | Time
                        </a>
                    </th>
                    <th>
                        <div class="d-flex justify-content-end gap-1">
                            <a class="btn btn-sm btn-outline-success rounded-pill"
                               asp-action="Download"
                               asp-route-SortField="@Model.SortField"
                               asp-route-SortOrder="@Model.SortOrder"
                               asp-route-SearchField="@Model.SearchField"
                               asp-route-SearchText="@Model.SearchText">
                                <i class="bi bi-download"></i>&nbsp;DOWNLOAD
                            </a>
                        </div>
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Items)
                {
                    <tr class="align-middle">
                        @*@Html.Raw(Regex.Replace(item.Code, Model.SearchText, "<mark>" + Model.SearchText + "</mark>", RegexOptions.IgnoreCase))*@
                        <td>@item.Code</td>
                        <td>@item.Title</td>
                        <td>@item.Level</td>
                        <td>@item.Type</td>
                        <td>@item.AddedDateTime?.ToCleanString()</td>
                        <td>@item.ModifiedDateTime?.ToCleanString()</td>
                        <td>
                            <div class="d-flex justify-content-end gap-1">
                                <a class="btn btn-sm btn-outline-info rounded-circle" asp-action="Details" asp-route-id="@item.Id"><i class="bi bi-info-circle"></i></a>
                                <a class="btn btn-sm btn-outline-secondary rounded-circle" asp-action="Edit" asp-route-id="@item.Id"><i class="bi bi-pencil-square"></i></a>
                                <a class="btn btn-sm btn-outline-danger rounded-circle" asp-action="Delete" asp-route-id="@item.Id"><i class="bi bi-trash3"></i></a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!--Row-->
    <div class="g-2 row">
        <!--Col-->
        <div class="col-auto col-sm-7 d-flex justify-content-start align-items-center">
            <!--Items Info-->
            <label class="small">Showing item(s): @Model.FirstItemOnPage - @Model.LastItemOnPage of @Model.TotalItemsCount @(string.IsNullOrEmpty(Model.SearchText) ? "" : $" [Search : '{Model.SearchText}' in {Model.SearchField}]")</label>
        </div>
        <!--Col-->
        <div class="ms-auto col-auto col-sm-5 d-flex justify-content-end align-items-center">
            <!--Page Info-->
            <label class="small">Page: @Model.PageNumber of @Model.PagesCount</label>
        </div>

    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ListPartial");}
}
